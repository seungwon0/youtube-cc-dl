#!/usr/bin/env perl
#
# youtube-cc-dl - Download YouTube Closed Caption
#
# Seungwon Jeong <seungwon0@gmail.com>
#
# Copyright (C) 2011 by Seungwon Jeong

use strict;

use warnings;

use 5.010;

use autodie;

use Getopt::Long;

use IO::Prompt;

use WWW::YouTube::CC;

sub print_version {
    say "youtube-cc-dl $WWW::YouTube::CC::VERSION";
    return;
}

sub print_help {
    print_version();

    print <<'END_HELP';

Usage:

  youtube-cc-dl [options] URL...

Options:

  -h, --help            print this help text and exit
  -v, --version         print program version and exit

Argument:

  URL                   URL of a YouTube video

Examples:

  youtube-cc-dl 'http://www.youtube.com/watch?v=tuRYbBvOMRo'
  youtube-cc-dl k6U-i4gXkLM

Please report bugs to <seungwon0@gmail.com>.
END_HELP
    return;
}

my $print_help;
my $print_version;

GetOptions(
    'help'    => \$print_help,
    'version' => \$print_version,
) or die "GetOptions failed.\n";

if ($print_help) {
    print_help();
    exit;
}

if ($print_version) {
    print_version();
    exit;
}

if ( @ARGV < 1 ) {
    print_help();
    exit 2;
}

ARG:
for my $idx ( 0 .. $#ARGV ) {
    if ( @ARGV > 1 ) {
        printf "[%d/%d] %s\n", $idx + 1, scalar @ARGV, $ARGV[$idx];
    }

    # Get v_param
    my $v_param;
    if ( WWW::YouTube::CC::is_valid_v_param( $ARGV[$idx] ) ) {
        $v_param = $ARGV[$idx];
    }
    else {
        $v_param = WWW::YouTube::CC::get_v_param( $ARGV[$idx] );
        if ( !defined $v_param ) {
            warn "Invalid YouTube video URL: $ARGV[$idx]\n";
            next ARG;
        }
    }

    # Download and parse closed caption list
    my $xml_ref = WWW::YouTube::CC::download_cc_list($v_param);
    next ARG if !defined $xml_ref;
    my @cc_list = WWW::YouTube::CC::parse_cc_list($xml_ref);
    if ( @cc_list == 0 ) {
        warn "This video seems to have no closed caption.\n";
        next ARG;
    }

    # Select a closed caption
    my $name = $cc_list[0]{name};
    my $lang = $cc_list[0]{lang_code};
    if ( @cc_list > 1 ) {

        # Print closed caption list
        for my $idx ( 0 .. $#cc_list ) {
            printf "[%d] name='%s' / lang_code='%s'\n",
                $idx + 1, $cc_list[$idx]{name}, $cc_list[$idx]{lang_code};
        }

        my $num = 1;
        my $max = @cc_list;
    PROMPT:
        while (1) {
            $num = prompt( "Select a closed caption (1-$max): ", -ti ) // 1;
            last PROMPT if $num >= 1 && $num <= $max;
        }
        $name = $cc_list[ $num - 1 ]{name};
        $lang = $cc_list[ $num - 1 ]{lang_code};
    }

    # Download closed caption
    $xml_ref = WWW::YouTube::CC::download_cc( $v_param, $name, $lang );
    next ARG if !defined $xml_ref;

    # Convert closed caption
    my $srt_ref = WWW::YouTube::CC::convert_to_srt($xml_ref);
    next ARG if !defined $srt_ref;

    # Save closed caption into file
    my $file_name = $v_param . '.srt';
    open my $fh, '>', $file_name;
    print {$fh} ${$srt_ref};
    close $fh;
    say "Successfully saved as '$file_name'.";

    if ( @ARGV > 1 ) {
        say q{};
    }
}
